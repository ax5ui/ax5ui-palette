{"version":3,"sources":["ax5palette.js","ax5palette-tmpl.js"],"names":["UI","ax5","ui","U","util","PALETTE","addClass","className","version","cfg","this","instanceId","getGuid","target","config","clickEventName","theme","animateTime","colors","red","orange","yellow","green","blue","purple","skyblue","pink","black","white","init","onStateChanged","onClick","console","log","info","getError","jQuery","main","palette_instance","push","arguments","isObject","setConfig","apply","palette","bodyTmpl","columnKeys","tmpl","get","tmplName","data","mustache","render","call"],"mappings":"cACA,WAEA,GAAAA,GAAAC,IAAAC,GACAC,EAAAF,IAAAG,KACAC,EAAAA,MAEAL,GAAAM,UACAC,UAAA,UACAC,QAAA,cACA,WAUA,MAAA,YACA,GACAC,GAAAA,MAEAC,MAAAC,WAAAV,IAAAW,UACAF,KAAAG,OAAA,KAEAH,KAAAI,QACAC,eAAA,QACAC,MAAA,UACAC,YAAA,IACAC,SACAC,IAAA,YACAC,OAAA,YACAC,OAAA,YACAC,MAAA,YACAC,KAAA,YACAC,OAAA,YACAC,QAAA,YACAC,KAAA,YACAC,MAAA,YACAC,MAAA,aAIAnB,EAAAC,KAAAI,MA4BAJ,MAAAmB,KAAA,WAGAnB,KAAAoB,eAAArB,EAAAqB,eACApB,KAAAqB,QAAAtB,EAAAsB,QAEAtB,EAAAI,QACAmB,QAAAC,IAAAhC,IAAAiC,KAAAC,SAAA,aAAA,MAAA,cAEAzB,KAAAG,OAAAuB,OAAA3B,EAAAI,SAKAH,KAAA2B,KAAA,WAEArC,EAAAsC,iBAAAtC,EAAAsC,qBACAtC,EAAAsC,iBAAAC,KAAA7B,MAEA8B,WAAArC,EAAAsC,SAAAD,UAAA,KACA9B,KAAAgC,UAAAF,UAAA,KAEAG,MAAAjC,KAAA8B,gBAGAnC,EAAAJ,IAAAC,GAAA0C,WCjGA,WAEA,GAAAvC,GAAAJ,IAAAC,GAAA0C,QAEAC,EAAA,SAAAC,GACA,MAAA,uBAMAzC,GAAA0C,MACAF,SAAAA,EAEAG,IAAA,SAAAC,EAAAC,EAAAJ,GACA,MAAA7C,KAAAkD,SAAAC,OAAA/C,EAAA0C,KAAAE,GAAAI,KAAA3C,KAAAoC,GAAAI","file":"ax5palette.min.js","sourcesContent":["// ax5.ui.palette\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let PALETTE;\n\n    UI.addClass({\n        className: \"palette\",\n        version: \"${VERSION}\"\n    }, (function () {\n\n        /**\n         * @class ax5palette\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                animateTime: 100,\n                colors: [\n                    {\"red\": \"#ff0000\"},\n                    {\"orange\": \"#ff9802\"},\n                    {\"yellow\": \"#ffff00\"},\n                    {\"green\": \"#00ff36\"},\n                    {\"blue\": \"#0000ff\"},\n                    {\"purple\": \"#ba00ff\"},\n                    {\"skyblue\": \"#84e4ff\"},\n                    {\"pink\": \"#ff77c4\"},\n                    {\"black\": \"#000000\"},\n                    {\"white\": \"#ffffff\"},\n                ]\n            };\n\n            cfg = this.config;\n\n            const onStateChanged = function (opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n            };\n\n            const repaint = function () {\n\n            };\n\n            /**\n             * Preferences of palette UI\n             * @method ax5palette.setConfig\n             * @param {Object} config\n             * @param {(Element||nodelist)} config.target\n             * @returns {ax5palette}\n             * @example\n             * ```js\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                // after setConfig();\n\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5palette\", \"401\", \"setConfig\"));\n                }\n                this.target = jQuery(cfg.target);\n\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.palette_instance = UI.palette_instance || [];\n                UI.palette_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n    PALETTE = ax5.ui.palette;\n})();","// ax5.ui.calendar.tmpl\n(function () {\n\n    const PALETTE = ax5.ui.palette;\n\n    let bodyTmpl = function (columnKeys) {\n        return `\n\n                `;\n    };\n\n\n    PALETTE.tmpl = {\n        \"bodyTmpl\": bodyTmpl,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(PALETTE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();"]}